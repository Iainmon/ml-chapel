AST dump for tensor_test_2 after pass refPropagation.
Module use list: ChapelStandard Tensor 

{
  function chpl__init_tensor_test_2[498253]() : void[4] "insert line file info" "module init" "resolved"
  {
    const-val call_tmp[865553]:Tensor(3,real(64))[1771316] "dead after last mention" "maybe param" "temp"
    const-val ret_tmp[2609400]:Tensor(3,real(64))[1771316] "temp"
    (202053 call zeros[1771205] 3 3 3 ret_tmp[2609400])
    (2609403 'move' call_tmp[865553] ret_tmp[2609400])
    (660608 'move' a[202048] call_tmp[865553])
    const-val call_tmp[865558]:Tensor(2,real(64))[1804741] "dead after last mention" "maybe param" "temp"
    const-val ret_tmp[2610380]:Tensor(2,real(64))[1804741] "temp"
    (202066 call zeros[1804635] 3 3 ret_tmp[2610380])
    (2610383 'move' call_tmp[865558] ret_tmp[2610380])
    (660610 'move' b[202062] call_tmp[865558])
    const-val call_tmp_F0_low[3259186]:int(64)[13] "temp"
    const-val call_tmp_F1_count[3259188]:int(64)[13] "temp"
    const-val ret_tmp_F0_low[3259282]:int(64)[13] "temp"
    const-val ret_tmp_F1_count[3259284]:int(64)[13] "temp"
    val inlineImm[2987299]:int(64)[13] "temp"
    (2987302 'move' inlineImm[2987299] 0)
    val inlineImm[2987304]:int(64)[13] "temp"
    (2987307 'move' inlineImm[2987304] 3)
    const-val _ir_F0_low[3259666]:int(64)[13] "temp"
    const-val _ir_F1_count[3259668]:int(64)[13] "temp"
    (2987318 'move' _ir_F0_low[3259666] inlineImm[2987299])
    (2987322 'move' _ir_F1_count[3259668] inlineImm[2987304])
    (3259290 'move' ret_tmp_F0_low[3259282] _ir_F0_low[3259666])
    (3259295 'move' ret_tmp_F1_count[3259284] _ir_F1_count[3259668])
    (3259194 'move' call_tmp_F0_low[3259186] ret_tmp_F0_low[3259282])
    (3259199 'move' call_tmp_F1_count[3259188] ret_tmp_F1_count[3259284])
    const-val _ic__F0_low[3237166]:int(64)[13] "temp"
    const-val _ic__F1_count[3237168]:int(64)[13] "temp"
    const-val tmp[2988071]:int(64)[13] "temp"
    (2988073 'move' tmp[2988071] call_tmp_F0_low[3259186])
    (2988078 'move' _ic__F0_low[3237166] tmp[2988071])
    const-val tmp[2988082]:int(64)[13] "temp"
    (2988084 'move' tmp[2988082] call_tmp_F1_count[3259188])
    (2988089 'move' _ic__F1_count[3237168] tmp[2988082])
    const-val call_tmp_F0_low[3257687]:int(64)[13] "temp"
    const-val call_tmp_F1_count[3257689]:int(64)[13] "temp"
    const-val ret_tmp_F0_low[3257703]:int(64)[13] "temp"
    const-val ret_tmp_F1_count[3257705]:int(64)[13] "temp"
    const-val low[2682046]:int(64)[13] "temp"
    (2682051 'move' low[2682046] _ic__F0_low[3237166])
    const-val count[2682053]:int(64)[13] "temp"
    (2682058 'move' count[2682053] _ic__F1_count[3237168])
    const-val _ir_F0_low[3258015]:int(64)[13] "temp"
    const-val _ir_F1_count[3258017]:int(64)[13] "temp"
    (2989474 'move' _ir_F0_low[3258015] low[2682046])
    (2989478 'move' _ir_F1_count[3258017] count[2682053])
    (3257711 'move' ret_tmp_F0_low[3257703] _ir_F0_low[3258015])
    (3257716 'move' ret_tmp_F1_count[3257705] _ir_F1_count[3258017])
    (3257695 'move' call_tmp_F0_low[3257687] ret_tmp_F0_low[3257703])
    (3257700 'move' call_tmp_F1_count[3257689] ret_tmp_F1_count[3257705])
    const-val _ic__F0_low[3242202]:int(64)[13] "temp"
    const-val _ic__F1_count[3242204]:int(64)[13] "temp"
    const-val tmp[2990215]:int(64)[13] "temp"
    (2990217 'move' tmp[2990215] call_tmp_F0_low[3257687])
    (2990222 'move' _ic__F0_low[3242202] tmp[2990215])
    const-val tmp[2990226]:int(64)[13] "temp"
    (2990228 'move' tmp[2990226] call_tmp_F1_count[3257689])
    (2990233 'move' _ic__F1_count[3242204] tmp[2990226])
    const-val call_tmp[2755122]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val count[2755547]:int(64)[13] "temp"
    (2755552 'move' count[2755547] _ic__F1_count[3242204])
    const-val call_tmp[2977394]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2977396 'move' call_tmp[2977394](2977398 '<' count[2755547] 0))
    (2755124 'move' call_tmp[2755122] call_tmp[2977394])
    if call_tmp[2755122]
    {
      (2755143 call boundsCheckHalt[293862] "With a negative count, the range must have a last index.")
    }
    const-val start[2755146]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
    const-val low[2755554]:int(64)[13] "temp"
    (2755559 'move' low[2755554] _ic__F0_low[3242202])
    (2755148 'move' start[2755146] low[2755554])
    val tmp[2755153]:int(64)[13] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    const-val call_tmp[2755157]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val count[2755561]:int(64)[13] "temp"
    (2755566 'move' count[2755561] _ic__F1_count[3242204])
    val inlineImm[2968884]:int(64)[13] "temp"
    (2968887 'move' inlineImm[2968884] 0)
    const-val call_tmp[2968890]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2968892 'move' call_tmp[2968890](2968894 '==' count[2755561] inlineImm[2968884]))
    (2755159 'move' call_tmp[2755157] call_tmp[2968890])
    if call_tmp[2755157]
    {
      const-val tmp[2755170]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
      const-val call_tmp[2755172]:uint(64)[118] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val low[2755568]:int(64)[13] "temp"
      (2755573 'move' low[2755568] _ic__F0_low[3242202])
      (2755174 'move' call_tmp[2755172](2755176 'cast' uint(64)[118] low[2755568]))
      const-val call_tmp[2755179]:uint(64)[118] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val call_tmp[2991431]:uint(64)[118] "dead after last mention" "expr temp" "maybe param" "temp"
      (2991433 'move' call_tmp[2991431](2991435 '-' call_tmp[2755172] 1))
      (2755188 'move' call_tmp[2755179] call_tmp[2991431])
      const-val call_tmp[2991851]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (2991853 'move' call_tmp[2991851](2991855 'cast' int(64)[13] call_tmp[2755179]))
      (2755195 'move' tmp[2755170] call_tmp[2991851])
      (2755200 'move' tmp[2755153] tmp[2755170])
    }
    {
      const-val call_tmp[2755213]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val count[2755582]:int(64)[13] "temp"
      (2755587 'move' count[2755582] _ic__F1_count[3242204])
      const-val call_tmp[2992681]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (2992683 'move' call_tmp[2992681](2992685 '-' count[2755582] 1))
      (2755215 'move' call_tmp[2755213] call_tmp[2992681])
      const-val call_tmp[2755220]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val low[2755589]:int(64)[13] "temp"
      (2755594 'move' low[2755589] _ic__F0_low[3242202])
      const-val call_tmp[2975275]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (2975277 'move' call_tmp[2975275](2975279 '+' low[2755589] call_tmp[2755213]))
      (2755222 'move' call_tmp[2755220] call_tmp[2975275])
      (2755233 'move' tmp[2755153] call_tmp[2755220])
    }
    const-val call_tmp_F0_low[3250563]:int(64)[13] "temp"
    const-val call_tmp_F1_high[3250565]:int(64)[13] "temp"
    const-val ret_tmp_F0_low[3250579]:int(64)[13] "temp"
    const-val ret_tmp_F1_high[3250581]:int(64)[13] "temp"
    const-val _ir_F0_low[3251075]:int(64)[13] "temp"
    const-val _ir_F1_high[3251077]:int(64)[13] "temp"
    (2993749 'move' _ir_F0_low[3251075] start[2755146])
    (2993753 'move' _ir_F1_high[3251077] tmp[2755153])
    (3250587 'move' ret_tmp_F0_low[3250579] _ir_F0_low[3251075])
    (3250592 'move' ret_tmp_F1_high[3250581] _ir_F1_high[3251077])
    (3250571 'move' call_tmp_F0_low[3250563] ret_tmp_F0_low[3250579])
    (3250576 'move' call_tmp_F1_high[3250565] ret_tmp_F1_high[3250581])
    const-val _ic__F0_low[3247416]:int(64)[13] "temp"
    const-val _ic__F1_high[3247418]:int(64)[13] "temp"
    const-val tmp[2996314]:int(64)[13] "temp"
    (2996316 'move' tmp[2996314] call_tmp_F0_low[3250563])
    (2996321 'move' _ic__F0_low[3247416] tmp[2996314])
    const-val tmp[2996325]:int(64)[13] "temp"
    (2996327 'move' tmp[2996325] call_tmp_F1_high[3250565])
    (2996332 'move' _ic__F1_high[3247418] tmp[2996325])
    val i[2755270]:int(64)[13] "dead at end of block" "insert auto destroy"
    (2755274 'move' i[2755270] 0)
    const-val default_arg_first[2755285]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
    const-val low[2755287]:int(64)[13] "temp"
    (2755289 'move' low[2755287] _ic__F0_low[3247416])
    (2755294 'move' default_arg_first[2755285] low[2755287])
    const-val default_arg_last[2755299]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
    const-val high[2755301]:int(64)[13] "temp"
    (2755303 'move' high[2755301] _ic__F1_high[3247418])
    (2755308 'move' default_arg_last[2755299] high[2755301])
    const-val low[2755317]:int(64)[13] "temp"
    (2755319 'move' low[2755317] _ic__F0_low[3247416])
    const-val high[2755324]:int(64)[13] "temp"
    (2755326 'move' high[2755324] _ic__F1_high[3247418])
    (2755334 call chpl_checkIfRangeIterWillOverflow[1370422] low[2755317] high[2755324] 1 default_arg_first[2755285] default_arg_last[2755299] 1)
    CForLoop[2755341] hazard
    {
      const-val _yieldedIndex[2755377]:int(64)[13] "temp"
      (2755379 'move' _yieldedIndex[2755377] i[2755270])
      const-val _yieldedIndex[2755412]:int(64)[13] "temp"
      (2755545 'move' _yieldedIndex[2755412] _yieldedIndex[2755377])
      const-val _yieldedIndex[2755424]:int(64)[13] "temp"
      (2755426 'move' _yieldedIndex[2755424] _yieldedIndex[2755412])
      const-val i[2755430]:int(64)[13] "const" "index var" "insert auto destroy"
      (2755432 'move' i[2755430] _yieldedIndex[2755424])
      const-val call_tmp[2755436]:range(int(64),neither,one)[1832043] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[2755438]:range(int(64),neither,one)[1832043] "temp"
      (2755441 call chpl_build_unbounded_range[72249] ret_tmp[2755438])
      (2755443 'move' call_tmp[2755436] ret_tmp[2755438])
      const-val call_tmp[2755446]:range(int(64),neither,one)[1832043] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[2755448]:range(int(64),neither,one)[1832043] "temp"
      (2755451 call chpl_build_unbounded_range[72249] ret_tmp[2755448])
      (2755453 'move' call_tmp[2755446] ret_tmp[2755448])
      const-val call_tmp[2755456]:[ArrayViewRankChangeDom(2,int(64),one,3*bool,3*int(64),int(64),unmanaged ArrayViewRankChangeDist(unmanaged DefaultDist,3*bool,3*int(64)))] real(64)[1878539] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      ref call_tmp[3171598]:[domain(3,int(64),one)] real(64)[1785167] "dead after last mention" "maybe param" "temp"
      (3171600 'move' call_tmp[3171598](3171602 '.' a[202048] data[1771306]))
      const-val ret_tmp[2755465]:[ArrayViewRankChangeDom(2,int(64),one,3*bool,3*int(64),int(64),unmanaged ArrayViewRankChangeDist(unmanaged DefaultDist,3*bool,3*int(64)))] real(64)[1878539] "temp"
      (2755468 call this[1836730] call_tmp[3171598] call_tmp[2755436] call_tmp[2755446] i[2755430] ret_tmp[2755465])
      (2755474 'move' call_tmp[2755456] ret_tmp[2755465])
      const-val call_tmp[2755477]:Tensor(2,real(64))[1804741] "dead at end of block" "delay instantiation" "maybe param" "temp"
      const-val initTemp[2755479]:Tensor(2,real(64))[1804741] "dead at end of block" "delay instantiation" "temp"
      (2755482 call init[1879122] initTemp[2755479] call_tmp[2755456])
      (2755485 'move' call_tmp[2755477] initTemp[2755479])
      const-val a_i[2755488]:Tensor(2,real(64))[1804741] "dead at end of block" "const" "delay instantiation" "insert auto destroy"
      (2755490 'move' a_i[2755488] call_tmp[2755477])
      (2755494 call chpl__autoDestroy[2409260] call_tmp[2755456])
      const-val call_tmp[2755502]:Tensor(2,real(64))[1804741] "dead at end of block" "maybe param" "temp"
      const-val ret_tmp[2755504]:Tensor(2,real(64))[1804741] "temp"
      (2755507 call foo[2074368] a_i[2755488] ret_tmp[2755504])
      (2755510 'move' call_tmp[2755502] ret_tmp[2755504])
      const c[2755513]:Tensor(2,real(64))[1804741] "dead at end of block" "const" "insert auto destroy"
      (2755515 'move' c[2755513] call_tmp[2755502])
      ref call_tmp[3198651]:[domain(2,int(64),one)] real(64)[1816763] "dead after last mention" "maybe param" "temp"
      (3198653 'move' call_tmp[3198651](3198655 '.' b[202062] data[1804731]))
      val call_tmp[3202900]:_ir_chpl_promo1_+[2102951] "dead at end of block" "expr temp" "maybe param" "temp"
      val _ir__shape_[3232559]:domain(2,int(64),one)[1806108] "temp"
      val _ir_F0_a[3232561]:[domain(2,int(64),one)] real(64)[1816763] "temp"
      val _ir_F1_b[3232563]:[domain(2,int(64),one)] real(64)[1816763] "temp"
      (3202904 'move' _ir_F0_a[3232561](3261704 '.v' b[202062] data[1804731]))
      (3202908 'move' _ir_F1_b[3232563](3261711 '.v' c[2755513] data[1804731]))
      (3232569 '.=' call_tmp[3202900] _shape_[2103285] _ir__shape_[3232559])
      (3232573 '.=' call_tmp[3202900] F0_a[2900166] _ir_F0_a[3232561])
      (3232577 '.=' call_tmp[3202900] F1_b[2900170] _ir_F1_b[3232563])
      const-val call_tmp[3202915]:domain(2,int(64),one)[1807227] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[3202917]:domain(2,int(64),one)[1807227] "temp"
      (3202920 call _dom[2012368] call_tmp[3198651] ret_tmp[3202917])
      (3202923 'move' call_tmp[3202915] ret_tmp[3202917])
      val ret[3202926]:domain(2,int(64),one)[1806108] "dead after last mention" "RVV" "temp"
      (3202928 'move' ret[3202926](3202930 '.v' call_tmp[3202915] _instance[1807221]))
      (3202934 call chpl__autoDestroy[2387015] call_tmp[3202915])
      (3202936 '.=' call_tmp[3202900] _shape_[2103285] ret[3202926])
      val ret[3202940]:[domain(2,int(64),one)] real(64)[1811494] "dead after last mention" "RVV" "temp"
      (3202942 'move' ret[3202940](3202944 '.v' call_tmp[3198651] _instance[1816757]))
      val coerce_tmp[3202947]:[domain(2,int(64),one)] real(64)[1811494] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (3202949 'move' coerce_tmp[3202947] ret[3202940])
      const-val default_arg_tasksPerLocale[3202952]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
      const-val tasksPerLocale[3202954]:int(64)[13] "dead after last mention" "expr temp" "suppress lvalue error" "temp" "user variable name"
      (3202956 'move' tasksPerLocale[3202954] dataParTasksPerLocale[102472])
      (3202959 'move' default_arg_tasksPerLocale[3202952] tasksPerLocale[3202954])
      const-val default_arg_ignoreRunning[3202962]:bool[10] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
      const-val ignoreRunning[3202964]:bool[10] "dead after last mention" "expr temp" "suppress lvalue error" "temp" "user variable name"
      (3202966 'move' ignoreRunning[3202964] dataParIgnoreRunningTasks[102477])
      (3202969 'move' default_arg_ignoreRunning[3202962] ignoreRunning[3202964])
      const-val default_arg_minIndicesPerTask[3202972]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
      const-val minIndicesPerTask[3202974]:int(64)[13] "dead after last mention" "expr temp" "suppress lvalue error" "temp" "user variable name"
      (3202976 'move' minIndicesPerTask[3202974] dataParMinGranularity[102482])
      (3202979 'move' default_arg_minIndicesPerTask[3202972] minIndicesPerTask[3202974])
      val error[3202982]:Error[27353] "error variable" "temp"
      (3202984 'move' error[3202982] nil[44])
      val coerce_tmp[3202987]:domain(2,int(64),one)[1806108] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (3202989 'move' coerce_tmp[3202987](3202991 '.v' coerce_tmp[3202947] dom[1811425]))
      val coerce_tmp[3202994]:domain(2,int(64),one)[1806108] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (3202996 'move' coerce_tmp[3202994] coerce_tmp[3202987])
      val default_arg_offset_x0[3255067]:int(64)[13] "temp"
      val default_arg_offset_x1[3255069]:int(64)[13] "temp"
      val offset_x0[3255083]:int(64)[13] "temp"
      val offset_x1[3255085]:int(64)[13] "temp"
      const-val ret_tmp[3203003]:2*int(64)[1643535] "temp"
      (3203006 call createTuple[2033654] 0 ret_tmp[3203003])
      (3255091 'move' offset_x0[3255083](3255089 '.v' ret_tmp[3203003] x0[1643531]))
      (3255096 'move' offset_x1[3255085](3255094 '.v' ret_tmp[3203003] x1[1643533]))
      (3255075 'move' default_arg_offset_x0[3255067] offset_x0[3255083])
      (3255080 'move' default_arg_offset_x1[3255069] offset_x1[3255085])
      val error[3203015]:Error[27353] "error variable" "temp"
      (3203017 'move' error[3203015] nil[44])
      const-val call_tmp[3203020]:locale[28] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val call_tmp[3203022]:chpl_localeID_t[201579] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val call_tmp[3203024]:int(32)[98] "dead after last mention" "expr temp" "maybe param" "temp"
      (3203026 'move' call_tmp[3203024](3203029 call chpl_nodeID[200208]))
      const-val call_tmp[3203030]:chpl_localeID_t[201579] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      (3203032 'move' call_tmp[3203030](3203035 call chpl_rt_buildLocaleID[201614] call_tmp[3203024] c_sublocid_any[100203]))
      (3203038 'move' call_tmp[3203022] call_tmp[3203030])
      const-val call_tmp[3203041]:locale[28] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[3203043]:locale[28] "temp"
      (3203046 call chpl_localeID_to_locale[102280] call_tmp[3203022] ret_tmp[3203043])
      (3203049 'move' call_tmp[3203041] ret_tmp[3203043])
      (3203052 'move' call_tmp[3203020] call_tmp[3203041])
      val coerce_tmp[3203055]:BaseLocale[101278] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (3203057 'move' coerce_tmp[3203055](3203059 '.v' call_tmp[3203020] _instance[100294]))
      val coerce_tmp[3203062]:RootClass[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (3203064 'move' coerce_tmp[3203062](3203066 'cast' RootClass[22] coerce_tmp[3203055]))
      const-val call_tmp[3203069]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (3203071 'move' call_tmp[3203069](3203073 'ptr_eq' coerce_tmp[3203062] nil[44]))
      if call_tmp[3203069]
      {
        (3203079 call nilCheckHalt[293850] "argument to ! is nil")
      }
      const-val _virtual_method_tmp_[3203082]:int(32)[98] "temp"
      (3203084 'move' _virtual_method_tmp_[3203082](3203086 'getcid' coerce_tmp[3203055]))
      (3203088 'virtual method call' _getChildCount[101185] _virtual_method_tmp_[3203082] coerce_tmp[3203055])
      ref i_x[3203092]:locale[28] "temp"
      (3203094 'move' i_x[3203092](3203096 'set reference' call_tmp[3203020]))
      (3203099 call deinit[100484] i_x[3203092])
      const-val numTasks[3203101]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
      val tmp[3203103]:int(64)[13] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
      const-val call_tmp[3203105]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (3203107 'move' call_tmp[3203105](3203109 '==' default_arg_tasksPerLocale[3202952] 0))
      if call_tmp[3203105]
      {
        const-val call_tmp[3203114]:locale[28] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val call_tmp[3203116]:chpl_localeID_t[201579] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val call_tmp[3203118]:int(32)[98] "dead after last mention" "expr temp" "maybe param" "temp"
        (3203120 'move' call_tmp[3203118](3203123 call chpl_nodeID[200208]))
        const-val call_tmp[3203124]:chpl_localeID_t[201579] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        (3203126 'move' call_tmp[3203124](3203129 call chpl_rt_buildLocaleID[201614] call_tmp[3203118] c_sublocid_any[100203]))
        (3203132 'move' call_tmp[3203116] call_tmp[3203124])
        const-val call_tmp[3203135]:locale[28] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[3203137]:locale[28] "temp"
        (3203140 call chpl_localeID_to_locale[102280] call_tmp[3203116] ret_tmp[3203137])
        (3203143 'move' call_tmp[3203135] ret_tmp[3203137])
        (3203146 'move' call_tmp[3203114] call_tmp[3203135])
        val ret[3203149]:int(64)[13] "dead after last mention" "RVV" "temp"
        val coerce_tmp[3203151]:BaseLocale[101278] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (3203153 'move' coerce_tmp[3203151](3203155 '.v' call_tmp[3203114] _instance[100294]))
        val coerce_tmp[3203158]:RootClass[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (3203160 'move' coerce_tmp[3203158](3203162 'cast' RootClass[22] coerce_tmp[3203151]))
        const-val call_tmp[3203165]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (3203167 'move' call_tmp[3203165](3203169 'ptr_eq' coerce_tmp[3203158] nil[44]))
        if call_tmp[3203165]
        {
          (3203175 call nilCheckHalt[293850] "argument to ! is nil")
        }
        val coerce_tmp[3203178]:BaseLocale[101278] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (3203180 'move' coerce_tmp[3203178] coerce_tmp[3203151])
        (3203183 '=' ret[3203149](3203185 '.v' coerce_tmp[3203178] maxTaskPar[100875]))
        (3203188 'move' tmp[3203103] ret[3203149])
        ref i_x[3203191]:locale[28] "temp"
        (3203193 'move' i_x[3203191](3203195 'set reference' call_tmp[3203114]))
        (3203198 call deinit[100484] i_x[3203191])
      }
      {
        (3203201 'move' tmp[3203103] default_arg_tasksPerLocale[3202952])
      }
      (3203205 'move' numTasks[3203101] tmp[3203103])
      val tmp_x0[3255099]:int(64)[13] "temp"
      val tmp_x1[3255101]:int(64)[13] "temp"
      val tmp_x0[3255115]:int(64)[13] "temp"
      val tmp_x1[3255117]:int(64)[13] "temp"
      const-val call_tmp[3203212]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (3203214 'move' call_tmp[3203212](3203216 'task_get_serial'))
      if call_tmp[3203212]
      {
        val this_x0[3255141]:int(64)[13]
        val this_x1[3255143]:int(64)[13]
        (3203221 'move' this_x0[3255141] 1)
        (3203225 'move' this_x1[3255143] 0)
        (3255123 'move' tmp_x0[3255115] this_x0[3255141])
        (3255128 'move' tmp_x1[3255117] this_x1[3255143])
      }
      {
        val tmp_x0[3255149]:int(64)[13] "temp"
        val tmp_x1[3255151]:int(64)[13] "temp"
        ref call_tmp[3203235]:2*range(int(64),both,one)[1804968] "dead after last mention" "maybe param" "temp"
        (3203237 'move' call_tmp[3203235](3203239 '.' coerce_tmp[3202994] ranges[1806098]))
        const-val ret_tmp[3203242]:2*int(64)[1643535] "temp"
        (3203245 call _computeChunkStuff[2039068] numTasks[3203101] default_arg_ignoreRunning[3202962] default_arg_minIndicesPerTask[3202972] call_tmp[3203235] ret_tmp[3203242])
        (3255157 'move' tmp_x0[3255149](3255155 '.v' ret_tmp[3203242] x0[1643531]))
        (3255162 'move' tmp_x1[3255151](3255160 '.v' ret_tmp[3203242] x1[1643533]))
        (3255133 'move' tmp_x0[3255115] tmp_x0[3255149])
        (3255138 'move' tmp_x1[3255117] tmp_x1[3255151])
      }
      (3255107 'move' tmp_x0[3255099] tmp_x0[3255115])
      (3255112 'move' tmp_x1[3255101] tmp_x1[3255117])
      (3203261 'noop')
      const-val numChunks[3203262]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
      const-val coerce_tmp[3203264]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
      (3203266 'move' coerce_tmp[3203264] tmp_x0[3255099])
      (3203271 '=' numChunks[3203262] coerce_tmp[3203264])
      (3203274 'noop')
      const-val parDim[3203275]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
      const-val coerce_tmp[3203277]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
      (3203279 'move' coerce_tmp[3203277] tmp_x1[3255101])
      (3203284 '=' parDim[3203275] coerce_tmp[3203277])
      (3203287 'noop')
      const-val locBlock[3203288]:2*range(int(64),both,one)[1804968] "dead at end of block" "insert auto destroy"
      val tup_x0[3243920]:range(int(64),both,one)[1445607] "temp"
      val tup_x1[3243922]:range(int(64),both,one)[1445607] "temp"
      val elt_x0[3203292]:range(int(64),both,one)[1445607] "dead at end of block" "no auto destroy" "temp"
      (3203295 call init[1602299] elt_x0[3203292])
      (3203297 'move' tup_x0[3243920] elt_x0[3203292])
      val elt_x1[3203301]:range(int(64),both,one)[1445607] "dead at end of block" "no auto destroy" "temp"
      (3203304 call init[1602299] elt_x1[3203301])
      (3203306 'move' tup_x1[3243922] elt_x1[3203301])
      (3243928 '.=' locBlock[3203288] x0[1804964] tup_x0[3243920])
      (3243932 '.=' locBlock[3203288] x1[1804966] tup_x1[3243922])
      const-val call_tmp[3203313]:range(int(64),low,one)[1419820] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val coerce_tmp[3203315]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (3203317 'move' coerce_tmp[3203315] default_arg_offset_x0[3255067])
      const-val ret_tmp[3203322]:range(int(64),low,one)[1419820] "temp"
      (3203325 call chpl_build_low_bounded_range[1419287] coerce_tmp[3203315] ret_tmp[3203322])
      (3203328 'move' call_tmp[3203313] ret_tmp[3203322])
      ref call_tmp[3203331]:2*range(int(64),both,one)[1804968] "dead after last mention" "maybe param" "temp"
      (3203333 'move' call_tmp[3203331](3203335 '.' coerce_tmp[3202994] ranges[1806098]))
      const-val call_tmp[3203338]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[3203340]:range(int(64),both,one)[1445607] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (3203342 'move' coerce_tmp[3203340](3203344 '.v' call_tmp[3203331] x0[1804964]))
      (3203347 'move' call_tmp[3203338](3203350 call sizeAs[1491078] coerce_tmp[3203340]))
      const-val call_tmp[3203352]:range(int(64),both,one)[1445607] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[3203354]:range(int(64),both,one)[1445607] "temp"
      (3203357 call #[1556241] call_tmp[3203313] call_tmp[3203338] ret_tmp[3203354])
      (3203361 'move' call_tmp[3203352] ret_tmp[3203354])
      (3203364 '.=' locBlock[3203288] x0[1804964] call_tmp[3203352])
      const-val call_tmp[3203368]:range(int(64),low,one)[1419820] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val coerce_tmp[3203370]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (3203372 'move' coerce_tmp[3203370] default_arg_offset_x1[3255069])
      const-val ret_tmp[3203377]:range(int(64),low,one)[1419820] "temp"
      (3203380 call chpl_build_low_bounded_range[1419287] coerce_tmp[3203370] ret_tmp[3203377])
      (3203383 'move' call_tmp[3203368] ret_tmp[3203377])
      ref call_tmp[3203386]:2*range(int(64),both,one)[1804968] "dead after last mention" "maybe param" "temp"
      (3203388 'move' call_tmp[3203386](3203390 '.' coerce_tmp[3202994] ranges[1806098]))
      const-val call_tmp[3203393]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[3203395]:range(int(64),both,one)[1445607] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (3203397 'move' coerce_tmp[3203395](3203399 '.v' call_tmp[3203386] x1[1804966]))
      (3203402 'move' call_tmp[3203393](3203405 call sizeAs[1491078] coerce_tmp[3203395]))
      const-val call_tmp[3203407]:range(int(64),both,one)[1445607] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[3203409]:range(int(64),both,one)[1445607] "temp"
      (3203412 call #[1556241] call_tmp[3203368] call_tmp[3203393] ret_tmp[3203409])
      (3203416 'move' call_tmp[3203407] ret_tmp[3203409])
      (3203419 '.=' locBlock[3203288] x1[1804966] call_tmp[3203407])
      const-val tmpIter[3203423]:range(int(64),both,one)[1445607] "dead after last mention" "expr temp" "insert auto destroy" "maybe ref" "no copy" "temp"
      const-val call_tmp[3203425]:range(int(64),low,one)[1419820] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[3203427]:range(int(64),low,one)[1419820] "temp"
      (3203430 call chpl_build_low_bounded_range[1419287] 0 ret_tmp[3203427])
      (3203433 'move' call_tmp[3203425] ret_tmp[3203427])
      const-val ret_tmp[3203436]:range(int(64),both,one)[1445607] "temp"
      (3203439 call #[1556241] call_tmp[3203425] coerce_tmp[3203264] ret_tmp[3203436])
      (3203443 'move' tmpIter[3203423] ret_tmp[3203436])
      const _coforallCount[3203446]:_EndCount(atomic int(64),int(64))[1312766] "dead after last mention" "concurrently accessed" "const" "end count" "temp"
      val new_temp[3203448]:_EndCount(atomic int(64),int(64))[1312766] "dead after last mention" "temp"
      (3203450 'move' new_temp[3203448](3203453 call _new[1314035]))
      (3203454 'move' _coforallCount[3203446] new_temp[3203448])
      const-val numTasks[3203457]:int(64)[13] "dead after last mention" "temp"
      (3203459 'move' numTasks[3203457](3203462 call chpl_boundedCoforallSize[1637421] tmpIter[3203423]))
      (3203465 call _upEndCount[1637713] _coforallCount[3203446] numTasks[3203457])
      (3203469 call chpl_resetTaskSpawn[1642850] numTasks[3203457])
      const-val call_tmp_F0_this[3245926]:range(int(64),both,one)[1445607] "temp"
      const-val _ir_F0_this[3245934]:range(int(64),both,one)[1445607] "temp"
      (3203477 'move' _ir_F0_this[3245934] tmpIter[3203423])
      (3245932 'move' call_tmp_F0_this[3245926] _ir_F0_this[3245934])
      const-val _ic__F0_this[3246724]:range(int(64),both,one)[1445607] "temp"
      const-val tmp[3203516]:range(int(64),both,one)[1445607] "temp"
      (3203518 'move' tmp[3203516] call_tmp_F0_this[3245926])
      (3203523 'move' _ic__F0_this[3246724] tmp[3203516])
      const-val this[3203530]:range(int(64),both,one)[1445607] "temp"
      (3203532 'move' this[3203530] _ic__F0_this[3246724])
      (3203538 call checkIfIterWillOverflow[1447870] this[3203530] 1)
      val i[3203541]:int(64)[13] "dead at end of block" "insert auto destroy"
      (3203543 'move' i[3203541] 0)
      const-val this[3203546]:range(int(64),both,one)[1445607] "temp"
      (3203548 'move' this[3203546] _ic__F0_this[3246724])
      const-val coerce_tmp[3203553]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (3203555 'move' coerce_tmp[3203553](3203557 '.v' this[3203546] _low[1445569]))
      const-val this[3203560]:range(int(64),both,one)[1445607] "temp"
      (3203562 'move' this[3203560] _ic__F0_this[3246724])
      const-val coerce_tmp[3203567]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (3203569 'move' coerce_tmp[3203567](3203571 '.v' this[3203560] _high[1445574]))
      const end[3203574]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
      (3203576 'move' end[3203574] coerce_tmp[3203567])
      CForLoop[3203579]
      {
        val _args_forcoforall_fn[3203592]:_class_localscoforall_fn[2955644] "temp"
        (3203594 'move' _args_forcoforall_fn[3203592](3203596 'stack allocate class' _class_localscoforall_fn[2955644]))
        (3203598 '.=' _args_forcoforall_fn[3203592] _0_numChunks[2955647] numChunks[3203262])
        (3203602 '.=' _args_forcoforall_fn[3203592] _1_parDim[2955649] parDim[3203275])
        (3203606 '.=' _args_forcoforall_fn[3203592] _2_coerce_tmp[2955651] locBlock[3203288])
        (3203610 '.=' _args_forcoforall_fn[3203592] _3__coforallCount[2955653] _coforallCount[3203446])
        (3203614 '.=' _args_forcoforall_fn[3203592] _4_chunk[2955655] i[3203541])
        ref tmp[3203618]:_ir_chpl_promo1_+[2102951] "temp"
        (3203620 'move' tmp[3203618](3203622 'set reference' call_tmp[3202900]))
        (3203624 '.=' _args_forcoforall_fn[3203592] _6_b[2955659] tmp[3203618])
        (3203628 '.=' _args_forcoforall_fn[3203592] _7_a[2955661] call_tmp[3198651])
        val _args_vforcoforall_fn[3203632]:chpl__c_void_ptr[152] "temp"
        (3203634 'move' _args_vforcoforall_fn[3203632](3203636 'cast_to_void_star' _args_forcoforall_fn[3203592]))
        val _args_sizecoforall_fn[3203638]:int(64)[13] "temp"
        (3203640 'move' _args_sizecoforall_fn[3203638](3203642 'sizeof_bundle' _class_localscoforall_fn[2955644]))
        (3203645 call wrapcoforall_fn[2955716] _args_vforcoforall_fn[3203632] _args_sizecoforall_fn[3203638] _args_forcoforall_fn[3203592])
        {
          (3203581 '=' i[3203541] coerce_tmp[3203553])
        }
        {
          (3203585 '<=' i[3203541] end[3203574])
        }
        {
          (3203589 '+=' i[3203541] 1)
        }
      }
      val error[3203649]:Error[27353] "error variable" "temp"
      (3203651 'move' error[3203649] nil[44])
      (3203655 call _waitEndCount[1646344] _coforallCount[3203446] numTasks[3203457] error[3203649])
      val errorExists[3203659]:bool[10] "temp"
      (3203661 'move' errorExists[3203659](3203663 '!=' error[3203649] nil[44]))
      if errorExists[3203659]
      {
        (3203669 call chpl__delete[1645250] _coforallCount[3203446])
        (3203671 'move' error[3203015] error[3203649])
        gotoErrorHandling forall_IBB_break_label[3203692] forall_IBB_break_label[3203692]
      }
      (3203678 call chpl__delete[1645250] _coforallCount[3203446])
      (3203691 call chpl_after_forall_fence[17745])
      label forall_IBB_break_label[3203692]
      val errorExists[3203694]:bool[10] "temp"
      (3203696 'move' errorExists[3203694](3203698 '!=' error[3203015] nil[44]))
      if errorExists[3203694]
      {
        (3203703 'move' error[3202982] error[3203015])
        gotoErrorHandling forall_IBB_break_label[3203711] forall_IBB_break_label[3203711]
      }
      (3203710 call chpl_after_forall_fence[17745])
      label forall_IBB_break_label[3203711]
      val errorExists[3203713]:bool[10] "temp"
      (3203715 'move' errorExists[3203713](3203717 '!=' error[3202982] nil[44]))
      if errorExists[3203713]
      {
        (3203723 call chpl_propagate_error[29436] error[3202982])
      }
      (3203727 call chpl_after_forall_fence[17745])
      const-val _field_destructor_tmp_[3221582]:[domain(2,int(64),one)] real(64)[1816763] "temp"
      (3221584 'move' _field_destructor_tmp_[3221582](3221586 '.v' c[2755513] data[1804731]))
      (3221590 call chpl__autoDestroy[2387238] _field_destructor_tmp_[3221582])
      const-val _field_destructor_tmp_[3221592]:domain(2,int(64),one)[1807227] "temp"
      (3221594 'move' _field_destructor_tmp_[3221592](3221596 '.v' c[2755513] _domain[1804724]))
      (3221600 call chpl__autoDestroy[2387015] _field_destructor_tmp_[3221592])
      const-val _field_destructor_tmp_[3221611]:[domain(2,int(64),one)] real(64)[1816763] "temp"
      (3221613 'move' _field_destructor_tmp_[3221611](3221615 '.v' a_i[2755488] data[1804731]))
      (3221619 call chpl__autoDestroy[2387238] _field_destructor_tmp_[3221611])
      const-val _field_destructor_tmp_[3221621]:domain(2,int(64),one)[1807227] "temp"
      (3221623 'move' _field_destructor_tmp_[3221621](3221625 '.v' a_i[2755488] _domain[1804724]))
      (3221629 call chpl__autoDestroy[2387015] _field_destructor_tmp_[3221621])
      {
        const-val low[2755343]:int(64)[13] "temp"
        (2755345 'move' low[2755343] _ic__F0_low[3247416])
        (2755350 '=' i[2755270] low[2755343])
      }
      {
        const-val high[2755354]:int(64)[13] "temp"
        (2755356 'move' high[2755354] _ic__F1_high[3247418])
        (2755361 '<=' i[2755270] high[2755354])
      }
      {
        (2755369 '+=' i[2755270] 1)
      }
    }
    label _endchpl_direct_param_stride_range_iter[2755403]
    label _endchpl_direct_counted_range_iter_helper[2755408]
    label _endchpl_direct_counted_range_iter[2681923]
    (202154 call writeln[2114287] b[202062])
    (628418 return _void[58])
  }
  function foo[2074368](const  ref arg x[2074370]:Tensor(2,real(64))[1804741], ref arg _retArg[2614997]:Tensor(2,real(64))[1804741]) : void[4] "compiler added where" "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved"
  {
    const-val ret[2074392]:Tensor(2,real(64))[1804741] "dead after last mention" "RVV" "temp"
    val t[2074462]:Tensor(2,real(64))[1804741] "dead at end of block" "insert auto destroy"
    (2074464 call init=[2074497] t[2074462] x[2074370])
    ref call_tmp[3198625]:[domain(2,int(64),one)] real(64)[1816763] "dead after last mention" "maybe param" "temp"
    (3198627 'move' call_tmp[3198625](3198629 '.' t[2074462] data[1804731]))
    const-val coerce_tmp[2099343]:real(64)[16] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2099349 'move' coerce_tmp[2099343](2099345 'cast' real(64)[16] 1))
    (2074477 call +=[2098675] call_tmp[3198625] coerce_tmp[2099343])
    (2074482 'move' ret[2074392] t[2074462])
    label _end_foo[2074490]
    (2614999 '=' _retArg[2614997] ret[2074392])
    (2615001 return _void[58])
  }
  val a[202048]:Tensor(3,real(64))[1771316] "dead at end of block" "insert auto destroy"
  val b[202062]:Tensor(2,real(64))[1804741] "dead at end of block" "insert auto destroy"
  function main[981503]() : void[4] "resolved"
  {
    (981506 return _void[58])
  }
  function chpl_gen_main[981509](const  ref arg _arg[981508]:chpl_main_argument[154961]) : int(64)[13] "compiler generated" "export" "generated main" "local args" "resolved"
  {
    val ret[981552]:int(64)[13] "dead after last mention" "RVV" "temp"
    const-val _main_ret[981513]:int(64)[13] "dead after last mention" "temp"
    val _endCount[981515]:_EndCount(atomic int(64),int(64))[1312766] "dead after last mention" "temp"
    val ret[3093655]:_EndCount(atomic int(64),int(64))[1312766] "dead after last mention" "RVV" "temp"
    val new_temp[3093657]:_EndCount(atomic int(64),int(64))[1312766] "dead after last mention" "temp"
    (3093659 'move' new_temp[3093657](3093662 call _new[1314035]))
    (3093663 'move' ret[3093655] new_temp[3093657])
    (981520 'move' _endCount[981515] ret[3093655])
    (2950495 call chpl_task_setDynamicEndCount[30720] _endCount[981515])
    (981524 call chpl_rt_preUserCodeHook[155205])
    (981526 call chpl__init_tensor_test_2[498253])
    (981528 call main[981503])
    (981530 'move' _main_ret[981513] 0)
    (981533 call chpl_rt_postUserCodeHook[155209])
    val error[2588114]:Error[27353] "error variable" "temp"
    (2588116 'move' error[2588114] nil[44])
    (981535 call _waitEndCount[2223811] _endCount[981515] error[2588114])
    val errorExists[2960192]:bool[10] "temp"
    (2960197 'move' errorExists[2960192](2960194 '!=' error[2588114] nil[44]))
    if errorExists[2960192]
    {
      (2588119 call chpl_uncaught_error[29277] error[2588114])
    }
    (981538 call chpl_deinitModules[155260])
    (981557 'move' ret[981552] _main_ret[981513])
    (981554 return ret[981552])
  }
  function chpl__deinit_tensor_test_2[2631770]() : void[4] "resolved"
  {
    label _endchpl__deinit_tensor_test_2[2631776]
    const-val _field_destructor_tmp_[3221553]:[domain(2,int(64),one)] real(64)[1816763] "temp"
    (3221555 'move' _field_destructor_tmp_[3221553](3221557 '.v' b[202062] data[1804731]))
    (3221561 call chpl__autoDestroy[2387238] _field_destructor_tmp_[3221553])
    const-val _field_destructor_tmp_[3221563]:domain(2,int(64),one)[1807227] "temp"
    (3221565 'move' _field_destructor_tmp_[3221563](3221567 '.v' b[202062] _domain[1804724]))
    (3221571 call chpl__autoDestroy[2387015] _field_destructor_tmp_[3221563])
    const-val _field_destructor_tmp_[3221161]:[domain(3,int(64),one)] real(64)[1785167] "temp"
    (3221163 'move' _field_destructor_tmp_[3221161](3221165 '.v' a[202048] data[1771306]))
    (3221169 call chpl__autoDestroy[2385835] _field_destructor_tmp_[3221161])
    const-val _field_destructor_tmp_[3221171]:domain(3,int(64),one)[1773924] "temp"
    (3221173 'move' _field_destructor_tmp_[3221171](3221175 '.v' a[202048] _domain[1771299]))
    (3221179 call chpl__autoDestroy[2385663] _field_destructor_tmp_[3221171])
    (2631773 return _void[58])
  }
}